plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
}
## Curvas de calibracion
for(i in c(1,5,9)){
plot(predX8Var,
listOfPredictions1[[i]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
}
dev.off()
tiff('./plots/VarSelectionCalLines.tiff',
width = 10000,
height = 12960,
res = 1500
)
# win.graph()
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
}
## Curvas de calibracion
for(i in c(1,5,9)){
plot(predX8Var,
listOfPredictions1[[i]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
}
dev.off()
?svg
12960/10000
7*1.296
svg('./plots/VarSelectionCalLines.svg',
width = 9.072,
height = 7,
pointsize = 5)
# win.graph()
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
}
?legend
?EXTRAFONT
?extrafont
fonts()
win.graph()
library(extrafont)
loadfonts()
legendsVar <- c('4 variables', '8 variables', '12 variables')
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
legend('topleft',
legendsVar[i],
text.font = c('Verdana','bold italic'))
}
?legend
win.graph()
library(extrafont)
loadfonts()
legendsVar <- c('4 variables', '8 variables', '12 variables')
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
legend('topleft',
legendsVar[i],
text.font = 'verdana')
}
win.graph()
library(extrafont)
loadfonts()
legendsVar <- c('4 variables', '8 variables', '12 variables')
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
legend('topleft',
legendsVar[i],
text.font = c("sans serif", "bold italic"))
}
win.graph()
library(extrafont)
loadfonts()
legendsVar <- c('4 variables', '8 variables', '12 variables')
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
legend('topleft',
legendsVar[i]
)
}
legendsVar1
legendsVar[1]
legendsVar[2]
legendsVar[3]
win.graph()
library(extrafont)
loadfonts()
legendsVar <- c('4 variables', '8 variables', '12 variables')
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
legend('topleft',
legendsVar[i],
pch = 19,
col = 'white'
)
}
win.graph()
library(extrafont)
loadfonts()
legendsVar <- c('4 variables', '8 variables', '12 variables')
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
legend('topleft',
legendsVar[i],
lty = 2,
col = 'black'
)
}
## Curvas de calibracion
for(i in c(1,5,9)){
plot(predX8Var,
listOfPredictions1[[i]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
}
win.graph()
legendsVar <- c('4 variables', '8 variables', '12 variables')
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
legend('topleft',
legendsVar[i],
lty = 2,
col = 'black'
)
}
win.graph()
legendsVar <- c('4 variables', '8 variables', '12 variables')
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
legend('topleft',
legendsVar[i],
lty = 2,
col = 'black',
cex = 0.05
)
}
win.graph()
legendsVar <- c('4 variables', '8 variables', '12 variables')
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
legend('topleft',
legendsVar[i],
lty = 2,
col = 'black',
cex = 5
)
}
legendsVar <- c('4 ', '8 ', '12 ')
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
legend('topleft',
legendsVar[i],
lty = 2,
col = 'black',
cex = 5
)
}
win.graph()
legendsVar <- c('4 ', '8 ', '12 ')
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
legend('topleft',
legendsVar[i],
lty = 2,
col = 'black',
cex = 1
)
}
win.graph()
par(mfcol=c(3,2))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
legend('topleft',
c('4 ', '8 ', '12 ')[i],
lty = 2,
col = 'black',
cex = 1
)
}
