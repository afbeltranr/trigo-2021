z <- coord[,1]
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.015, color = col)
library(rgl)
x <- coord[,1]
y <- coord[,1]
z <- coord[,1]
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.015, color = colspca)
# text3d(x,y,z, rownames(coord), pos=3, col="black")
rgl_add_axes(x, y, z, show.bbox = FALSE)
aspect3d(1,1,1)
library(rgl)
x <- coord[,1]
y <- coord[,1]
z <- coord[,1]
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 1, color = colspca)
# text3d(x,y,z, rownames(coord), pos=3, col="black")
rgl_add_axes(x, y, z, show.bbox = FALSE)
aspect3d(1,1,1)
library(rgl)
x <- coord[,1]
y <- coord[,2]
z <- coord[,3]
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 1, color = colspca)
# text3d(x,y,z, rownames(coord), pos=3, col="black")
rgl_add_axes(x, y, z, show.bbox = FALSE)
aspect3d(1,1,1)
colspca <- vector('character', nrow(df1))
for(i in 1:nrow(df1)){
if( grepl(
paste0('(?=.*',
'L',
')'),
metadata.class2$class[i],perl = T)){colspca[i] <- 'black'}else{
if(grepl(
paste0('(?=.*',
'R',
')'),
metadata.class2$class[i],perl = T)){colspca[i] <- 'red'}else{colspca[i] <- 'green'}
}
}
vp <- (pcaall$sdev)^2
variance <- vp/sum(vp)*100
coord <- pcaall$x
plot(coord[,1],
coord[,2],
col=colspca,
xlab="PC1 - 40.74 %",
ylab= "PC2 - 16.46 %",
pch=19
)
abline(v=0, h=0, lty=2)
text(coord[,1],coord[,2], rownames(coord), cex=0.4, pos=1)
library(rgl)
x <- coord[,1]
y <- coord[,2]
z <- coord[,3]
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 1, color = colspca)
# text3d(x,y,z, rownames(coord), pos=3, col="black")
rgl_add_axes(x, y, z, show.bbox = FALSE)
aspect3d(1,1,1)
library(rgl)
knitr::knit_hooks$set(webgl = hook_webgl)
colspca <- vector('character', nrow(df1))
for(i in 1:nrow(df1)){
if( grepl(
paste0('(?=.*',
'L',
')'),
metadata.class2$class[i],perl = T)){colspca[i] <- 'black'}else{
if(grepl(
paste0('(?=.*',
'R',
')'),
metadata.class2$class[i],perl = T)){colspca[i] <- 'red'}else{colspca[i] <- 'green'}
}
}
vp <- (pcaall$sdev)^2
variance <- vp/sum(vp)*100
coord <- pcaall$x
plot(coord[,1],
coord[,2],
col=colspca,
xlab="PC1 - 40.74 %",
ylab= "PC2 - 16.46 %",
pch=19
)
abline(v=0, h=0, lty=2)
text(coord[,1],coord[,2], rownames(coord), cex=0.4, pos=1)
pcaall <- prcomp(spectra.class)
vp <- (pcaall$sdev)^2
variance <- vp/sum(vp)*100
coord <- pcaall$x
plot(coord[,1],
coord[,2],
col=colspca,
xlab="PC1 - 40.74 %",
ylab= "PC2 - 16.46 %",
pch=19
)
abline(v=0, h=0, lty=2)
text(coord[,1],coord[,2], rownames(coord), cex=0.4, pos=1)
colspca <- vector('character', nrow(df1))
for(i in 1:nrow(df1)){
if( grepl(
paste0('(?=.*',
'L',
')'),
metadata.class2$class[i],perl = T)){colspca[i] <- 'black'}else{
if(grepl(
paste0('(?=.*',
'R',
')'),
metadata.class2$class[i],perl = T)){colspca[i] <- 'red'}else{colspca[i] <- 'green'}
}
}
pcaall <- prcomp(spectra.class)
vp <- (pcaall$sdev)^2
variance <- vp/sum(vp)*100
coord <- pcaall$x
plot(coord[,1],
coord[,2],
col=colspca,
xlab="PC1 - 40.74 %",
ylab= "PC2 - 16.46 %",
pch=19
)
abline(v=0, h=0, lty=2)
text(coord[,1],coord[,2], rownames(coord), cex=0.4, pos=1)
variance
library(rgl)
x <- coord[,1]
y <- coord[,2]
z <- coord[,3]
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 1, color = colspca)
# text3d(x,y,z, rownames(coord), pos=3, col="black")
rgl_add_axes(x, y, z, show.bbox = FALSE)
aspect3d(1,1,1)
library(rgl)
x <- coord[,1]
y <- coord[,2]
z <- coord[,3]
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.2, color = colspca)
# text3d(x,y,z, rownames(coord), pos=3, col="black")
rgl_add_axes(x, y, z, show.bbox = FALSE)
aspect3d(1,1,1)
library(rgl)
x <- coord[,1]
y <- coord[,2]
z <- coord[,3]
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.002, color = colspca)
# text3d(x,y,z, rownames(coord), pos=3, col="black")
rgl_add_axes(x, y, z, show.bbox = FALSE)
aspect3d(1,1,1)
round(variance,2)
variance <- round(vp/sum(vp)*100,2)
variance
colspca <- vector('character', nrow(df1))
for(i in 1:nrow(df1)){
if( grepl(
paste0('(?=.*',
'L',
')'),
metadata.class2$class[i],perl = T)){colspca[i] <- 'black'}else{
if(grepl(
paste0('(?=.*',
'R',
')'),
metadata.class2$class[i],perl = T)){colspca[i] <- 'red'}else{colspca[i] <- 'white'}
}
}
pcaall <- prcomp(spectra.class)
vp <- (pcaall$sdev)^2
variance <- round(vp/sum(vp)*100,2)
coord <- pcaall$x
plot(coord[,1],
coord[,2],
col=colspca,
xlab="PC1 - 40.74 %",
ylab= "PC2 - 16.46 %",
pch=19
)
abline(v=0, h=0, lty=2)
text(coord[,1],coord[,2], rownames(coord), cex=0.4, pos=1)
library(rgl)
knitr::knit_hooks$set(webgl = hook_webgl)
library(rgl)
x <- coord[,1]
y <- coord[,2]
z <- coord[,3]
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.002, color = colspca)
# text3d(x,y,z, rownames(coord), pos=3, col="black")
rgl_add_axes(x, y, z, show.bbox = FALSE)
aspect3d(1,1,1)
library(plsVarSel)
gaVarSel <- ga_pls(SiTable$Si, newRange, GA.threshold = 10, iters = 5, popSize = 100)
win.graph()
plot(gaLeavesPLS)
gaLeavesPLS <-pls(newRange[,unlist(gaVarSel)],
SiTable$Si,
10,
cv =1)
library(plsVarSel)
gaVarSel <- ga_pls(SiTable$Si, newRange, GA.threshold = 10, iters = 5, popSize = 100)
library(mdatools)
win.graph()
par(mfrow=c(2,2))
plotXVariance(LeavesPLS)
plotXCumVariance(LeavesPLS)
plotYVariance(LeavesPLS)
plotYCumVariance(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(newRange,
SiTable$Si,
10,
cv =1)
summary(LeavesPLS)
summary(LeavesPLS$res$cal)
plot(LeavesPLS)
win.graph()
par(mfrow=c(2,2))
plotXVariance(LeavesPLS)
plotXCumVariance(LeavesPLS)
plotYVariance(LeavesPLS)
plotYCumVariance(LeavesPLS)
library(plsVarSel)
gaVarSel <- ga_pls(SiTable$Si, newRange, GA.threshold = 10, iters = 5, popSize = 100)
gaLeavesPLS <-pls(newRange[,unlist(gaVarSel)],
SiTable$Si,
10,
cv =1)
win.graph()
plot(gaLeavesPLS)
win.graph()
plot(gaLeavesPLS)
library(subselect)
Hmat <- lmHmat(leavesSiSpectra,metadata.leaves.Si$Si)
gen <- genetic(Hmat$mat, kmin =4, kmax = 12, H= Hmat$H, r =1, crit = 'CCR12', force = T)
win.graph()
par(mfrow=c(3,3))
for(j in 1:nrow(gen$bestsets)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 2,
lty = 2)
}
library(subselect)
Hmat <- lmHmat(leavesSiSpectra,metadata.leaves.Si$Si)
gen <- genetic(Hmat$mat, kmin =4, kmax = 12, H= Hmat$H, r =1, crit = 'CCR12', force = T)
View(gen)
View(gen$subsets)
View(gen$bestsets)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[1,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[2,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[3,]],
SiTable$Si,
10,
cv =1)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[4,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[5,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[6,]],
SiTable$Si,
10,
cv =1)
library(rgl)
knitr::knit_hooks$set(webgl = hook_webgl)
plot(LeavesPLS)
library(subselect)
Hmat <- lmHmat(leavesSiSpectra,metadata.leaves.Si$Si)
gen <- genetic(Hmat$mat, kmin =4, kmax = 12, H= Hmat$H, r =1, crit = 'CCR12', force = T)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[6,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[7,]],
SiTable$Si,
10,
cv =1)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[8,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[8,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[9,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[10,]],
SiTable$Si,
10,
cv =1)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[1,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[2,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[3,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[4,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[3,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[5,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[4,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[5,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[6,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[7,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[5,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[4,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(subselect)
Hmat <- lmHmat(leavesSiSpectra,metadata.leaves.Si$Si)
gen <- genetic(Hmat$mat, kmin =5, kmax = 16, H= Hmat$H, r =1, crit = 'CCR12', force = T)
win.graph()
par(mfrow=c(2,2))
plotXVariance(LeavesPLS)
plotXCumVariance(LeavesPLS)
plotYVariance(LeavesPLS)
plotYCumVariance(LeavesPLS)
par(mfrow=c(2,2))
plotXVariance(LeavesPLS)
plotXCumVariance(LeavesPLS)
plotYVariance(LeavesPLS)
plotYCumVariance(LeavesPLS)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra,
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[1,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[2,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[3,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[4,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[5,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra[,gen$bestsets[6,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(corrected,
SiTable$Si,
10,
cv =1)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra,
SiTable$Si,
10,
cv =1)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra,
SiTable$Si,
10,
cv =1)
summary(LeavesPLS)
summary(LeavesPLS$res$cal)
library(plsVarSel)
gaVarSel <- ga_pls(SiTable$Si, newRange, GA.threshold = 10, iters = 5, popSize = 100)
library(plsVarSel)
gaVarSel <- ga_pls(SiTable$Si, leavesSiSpectra, GA.threshold = 10, iters = 5, popSize = 100)
library(AtomicWeights)
data("atomicWeightsData")
View(atomicWeightsData)
