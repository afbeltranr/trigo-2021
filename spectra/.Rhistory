xlab = expression(
paste(
'Wave number (cm'^'-1',
')'
)
),
ylab = 'Absorbance (a.u.)')
par(new = F)
for (i in 1:length(
rownames(leavesSiSpectra)
)
){
plot(as.numeric(
colnames(leavesSiSpectra)
),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.1))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(
paste(
'Wave number (cm'^'-1',
')'
)
),
ylab = 'Absorbance (a.u.)')
gaLeavesPLS <-pls(newRange[,unlist(gaVarSel)],
SiTable$Si,
10,
cv =1)
library(rgl)
x <- coord[,1]
y <- coord[,2]
z <- coord[,3]
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.002, color = colspca)
# text3d(x,y,z, rownames(coord), pos=3, col="black")
rgl_add_axes(x, y, z, show.bbox = FALSE)
aspect3d(1,1,1)
metadata.class2 <-
metadata.class[-c(which(is.na(metadata.class$spectra.index)) ),]
which(is.na(metadata.class2$spectra.index))
?hkmeans
library(factoextra)
?hkmeans
library(factoextra)
hClust1 <- hclust(dist(logdf))
plot(hClust1)
res.hk <-hkmeans(logdf,
5,
hc.metric =  'minkowski')
fviz_dend(res.hk, cex = 0.5, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
?genetic
library(subselect)
?genetic
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[6,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
View(gen)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[7,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[8,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[9,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[10,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[10,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
leavesSiSpectra[,gen$bestsets[10,]]
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[11,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[1,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[2,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[2,]],
SiTable$Si,
10,
cv =1)
win.graph()
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[3,]],
SiTable$Si,
10,
cv =1)
win.graph()
plot(LeavesPLS)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[4,]],
SiTable$Si,
10,
cv =1)
win.graph()
plot(LeavesPLS$pred)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[3,]],
SiTable$Si,
10,
cv =1)
win.graph()
plot(LeavesPLS$pred)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[3,]],
SiTable$Si,
10,
cv =1)
win.graph()
plot(LeavesPLS$pred)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[2,]],
SiTable$Si,
10,
cv =1)
win.graph()
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[2,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[2,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[2,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[2,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[2,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[3,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[4,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[5,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
for(i in 1:12){
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[i,]],
SiTable$Si,
10,
cv =1)
}
plot(LeavesPLS)
library(mdatools)
par(mfrow = c(3,4))
for(i in 1:12){
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[i,]],
SiTable$Si,
10,
cv =1)
}
plot(LeavesPLS)
library(mdatools)
par(mfrow = c(3,4))
for(i in 1:12){
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[i,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
}
library(mdatools)
win.graph
par(mfrow = c(3,4))
for(i in 1:12){
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[i,]],
SiTable$Si,
10,
cv =1)
par(new = F)
plot(LeavesPLS)
}
library(mdatools)
win.graph()
par(mfrow = c(3,4))
for(i in 1:12){
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[i,]],
SiTable$Si,
10,
cv =1)
par(new = F)
plot(LeavesPLS)
}
library(mdatools)
win.graph
par(mfrow = c(3,4))
for(i in 1:12){
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[i,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
}
library(mdatools)
win.graph
par(mfrow = c(3,4))
for(i in 1:12){
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[i,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
readline('wich one')
}
win.graph
par(mfrow = c(3,4))
for(i in 1:12){
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[i,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
readline('wich one')
}
win.graph()
par(mfrow = c(3,4))
for(i in 1:12){
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[i,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
readline('which one')
}
par(mfrow = c(3,4))
for(i in 1:12){
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[i,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
readline('which one')
}
par(mfrow = c(3,4))
for(i in 1:12){
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[i,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
readline('which one')
}
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[4,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <-
pls(leavesSiSpectra[,gen$bestsets[4,]],
SiTable$Si,
10,
cv =1)
plot(LeavesPLS)
summary(LeavesPLS)
install.packages('hyperSpec')
names <- list.files(pattern = '.CSV')
names <- list.files(pattern = '.CSV')
spectra.list <- lapply(names,
read.csv,
header = F)
wavenumbers <- unlist(spectra.list[[1]][1])
spectra.list2 <- lapply(spectra.list, '[', 2)
spectra.df <- as.data.frame(
t(as.data.frame(spectra.list2))
)
rownames(spectra.df) <- names
colnames(spectra.df) <- wavenumbers
# gsub('.{6}$', '', names)
head(names[1:3])
names2 <- gsub('.{4}$',
'',
rownames(spectra.df))
head(names2[1:4])
head(names2[292:318])
names2[292:318] <- gsub('.{41}$',
'',
rownames(
spectra.df
)[292:318])
head(names2[292:318])[1:4]
rownames(spectra.df) <- names2
rownames(spectra.df) <- names2
options(width = 30)
cols <- factor(gsub('.{2}$', '', names2))
head(cols)
for(i in  1:length(rownames(spectra.df))){
plot(wavenumbers,
spectra.df[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(4000, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(
paste('Wave number (cm'^'-1',
')')
),
ylab ='absorbance (a.u.)')
library(ggplot2)
library(dplyr)
data(gapminder)
gapminder %>%
filter(country == "Australia") %>%
ggplot(aes(x = year,
y = lifeExp)) +
geom_point()
for(i in  1:length(rownames(spectra.df))){
plot(wavenumbers,
spectra.df[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(4000, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(
paste('Wave number (cm'^'-1',
')')
),
ylab ='absorbance (a.u.)')
range1 <- spectra.df[,c(1:676)]
wavenumbers1 <- wavenumbers[c(1:676)]
range(wavenumbers1)
for(i in  1:length(rownames(range1))){
plot(wavenumbers1,
range1[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(1700, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(
paste('Wave number (cm'^'-1',
')'
)),
ylab ='absorbance (a.u.)')
for(i in  1:length(rownames(spectra.df))){
plot(wavenumbers,
spectra.df[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(4000, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(
paste('Wave number (cm'^'-1',
')')
),
ylab ='absorbance (a.u.)')
library(hyperSpec)
spc <- new('hyperSpec', # The class of the object
spc= mean, # the spectra matrix
wavelength = wavenumbers1
# independent variable, whether wave number
#or wave length
)
png('baseline.png')
library(hyperSpec)
spc <- new('hyperSpec', # The class of the object
spc= mean, # the spectra matrix
wavelength = wavenumbers1
# independent variable, whether wave number
#or wave length
)
citr:::insert_citation()
?png
