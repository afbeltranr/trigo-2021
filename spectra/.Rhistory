cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
}
4320*3
tiff('./plots/VarSelection.tiff',
width = 12960,
height = 3240,
res = 800
)
par(mfrow=c(1,3))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
}
dev.off()
4320*3.5
win.graph()
tiff('./plots/VarSelection.tiff',
width = 15120,
height = 3240,
res = 800
)
par(mfrow=c(1,3))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
}
dev.off()
tiff('./plots/VarSelection.tiff',
width = 15120,
height = 3240,
res = 1000
)
par(mfrow=c(1,3))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
}
dev.off()
win.graph()
tiff('./plots/VarSelection.tiff',
width = 15120,
height = 3240,
res = 1200
)
par(mfrow=c(1,3))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
}
dev.off()
4320*3
tiff('./plots/VarSelection.tiff',
width = 12960,
height = 3240,
res = 1200
)
par(mfrow=c(1,3))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
}
dev.off()
tiff('./plots/VarSelection.tiff',
width = 3240,
height = 12960,
res = 1200
)
par(mfrow=c(3,1))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
}
dev.off()
tiff('./plots/VarSelection.tiff',
width = 5000,
height = 12960,
res = 1200
)
par(mfrow=c(3,1))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
}
dev.off()
tiff('./plots/VarSelection.tiff',
width = 5000,
height = 12960,
res = 1500
)
par(mfrow=c(3,1))
for(j in c(1,5,9)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 1,
lty = 2)
}
dev.off()
tiff('./plots/CalLines.tiff',
width = 5000,
height = 12960,
res = 1500
)
par(mfrow = c(3,1))
for(i in c(1,5,9)){
plot(predX8Var,
listOfPredictions1[[i]],
xlab="Actual Si (ppm)" ,
ylab="Predicted Si (ppm)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
}
dev.off()
tiff('./plots/CalLines.tiff',
width = 5000,
height = 12960,
res = 1500
)
par(mfrow = c(3,1))
for(i in c(1,5,9)){
plot(predX8Var,
listOfPredictions1[[i]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
}
dev.off()
summary(listOfModels1[[1]])
boxplot(listOfModels1[[1]])
boxplot(listOfModels1[[1]]$residuals)
boxplot(listOfModels1[[2]]$residuals)
boxplot(listOfModels1[[3]]$residuals)
boxplot(listOfModels1[[4]]$residuals)
boxplot(listOfModels1[[5]]$residuals)
boxplot(listOfModels1[[6]]$residuals)
boxplot(listOfModels1[[7]]$residuals)
length(listOfModels1[[7]]$residuals)
summary(mols)
residuals <- c(listOfModels1[[1:9]]$residuals)
residuals <- c(listOfModels1[[c(1:9)]]$residuals)
listOfModels1[c(1:9)]$residuals
listOfModels1[1]$residuals
listOfModels1[[1]]$residuals
residualsT <- c(listOfModels1[[1]]$residuals,
listOfModels1[[2]]$residuals,
listOfModels1[[3]]$residuals,
listOfModels1[[4]]$residuals,
listOfModels1[[5]]$residuals,
listOfModels1[[6]]$residuals,
listOfModels1[[7]]$residuals,
listOfModels1[[8]]$residuals,
listOfModels1[[9]]$residuals)
VariablesResiduals <- c(rep(),
rep(),
rep(),
)
residualsT <- c(listOfModels1[[1]]$residuals,
listOfModels1[[2]]$residuals,
listOfModels1[[3]]$residuals,
listOfModels1[[4]]$residuals,
listOfModels1[[5]]$residuals,
listOfModels1[[6]]$residuals,
listOfModels1[[7]]$residuals,
listOfModels1[[8]]$residuals,
listOfModels1[[9]]$residuals)
VariablesResiduals <- c(rep(1,23),
rep(2,23),
rep(3,23),
rep(4,23),
rep(5,23),
rep(6,23),
rep(7,23),
rep(8,23),
rep(9,23),
)
VariablesResiduals <- c(rep(1,23),
rep(2,23),
rep(3,23),
rep(4,23),
rep(5,23),
rep(6,23),
rep(7,23),
rep(8,23),
rep(9,23)
)
ResidualsBox <- data.frame(residuals = residualsT, Variables = VariablesResiduals)
ResidualsTable <- data.frame(residuals = residualsT, Variables = VariablesResiduals)
?scale_fill_brewer
dp1 <- ggplot(ResidualsTable, aes(x=variables, y= Residuals, fill=variables)) +
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1, fill='white')+
labs(title="",x="# of variables selected", y = "Residuals (mg/kg)")
dp1 + scale_fill_brewer(palette="Greens") + theme_minimal()
dp1 <- ggplot(ResidualsTable, aes(x=Variables, y= Residuals, fill=variables)) +
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1, fill='white')+
labs(title="",x="# of variables selected", y = "Residuals (mg/kg)")
dp1 + scale_fill_brewer(palette="Greens") + theme_minimal()
ResidualsTable <- data.frame(Residuals = residualsT, Variables = VariablesResiduals)
dp1 <- ggplot(ResidualsTable, aes(x=Variables, y= Residuals, fill=Variables)) +
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1, fill='white')+
labs(title="",x="# of variables selected", y = "Residuals (mg/kg)")
dp1 + scale_fill_brewer(palette="Greens") + theme_minimal()
ResidualsTable$Variables <- as.factor(ResidualsTable$Variables)
dp1 <- ggplot(ResidualsTable, aes(x=Variables, y= Residuals, fill=Variables)) +
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1, fill='white')+
labs(title="",x="# of variables selected", y = "Residuals (mg/kg)")
dp1 + scale_fill_brewer(palette="Greens") + theme_minimal()
tiff('./plots/REsiduals.tiff',
tiff('./plots/REsiduals.tiff',
width = 5760,
height = 3240,
res = 800
)
dp1 <- ggplot(ResidualsTable, aes(x=Variables, y= Residuals, fill=Variables)) +
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1, fill='white')+
labs(title="",x="# of variables selected", y = "Residuals (mg/kg)")
dp1 + scale_fill_brewer(palette="Greens") + theme_minimal()
dev.off()
tiff('./plots/CVRMSEP.tiff',
width = 5760,
height = 3240,
res = 800
)
library(ggplot2)
dp <- ggplot(RMSEPTable, aes(x=variables, y=RMSEP, fill=variables)) +
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1, fill='white')+
labs(title="CVRMSE vs # of variables ",x="# of variables selected", y = "RMSE (n = 1000, mg/kg)")
dp + scale_fill_brewer(palette="Blues") + theme_minimal()
dev.off()
tiff('./plots/REsiduals.tiff',
width = 5760,
height = 3240,
res = 800
)
dp1 <- ggplot(ResidualsTable, aes(x=Variables, y= Residuals, fill=Variables)) +
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1, fill='white')+
labs(title="",x="# of variables selected", y = "Residuals (mg/kg)")
dp1 + scale_fill_brewer(palette="Greens") + theme_minimal()
dev.off()
?trainControl
listOfModels1[[1]]$coefficients
listOfModels1[[1]]$effects$
listOfModels1[[1]]$effects$
)
View(listOfModels1)
listOfModels1[[1]]$coefficients
listOfModels1[[2]]$coefficients
listOfModels1[[3]]$coefficients
which(leavesSiSpectra<0)
dp <- ggplot(RMSEPTable, aes(x=variables, y=RMSEP, fill=variables)) +
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1, fill='white')+
labs(title="CVRMSE vs # of variables ",x="# of variables selected", y = "RMSE (n = 1000)")
dp + scale_fill_brewer(palette="Blues")
dp <- ggplot(RMSEPTable, aes(x=variables, y=RMSEP, fill=variables)) +
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1, fill='white')+
labs(title="CVRMSE vs # of variables ",x="# of variables selected", y = "RMSE (n = 1000)")
dp + scale_fill_brewer(palette="Blues") + theme_minimal()
listOfModels1[[1]]$coefficients
listOfModels1[[1]]$coefficients[,4]
listOfModels1[[1]]$coefficients[,4]
summary(fit)$coefficients[,4]
summary(listOfModels1[[1]])$coefficients[,4]
str(summary(listOfModels1[[1]])$coefficients[,4] )
barplot(summary(listOfModels1[[1]])$coefficients[,4] _
barplot(summary(listOfModels1[[1]])$coefficients[,4] )
barplot(summary(listOfModels1[[1]])$coefficients[,4], ylim = c(0,0.05) )
barplot(summary(listOfModels1[[1]])$coefficients[,4], ylim = c(0,0.06) )
abline(h = 0.05, lty =2 , add = TRUE)
abline(h = 0.05, lty =2 , add = TRUE)
par(new = T)
abline(h = 0.05, lty =2)
barplot(summary(listOfModels1[[1]])$coefficients[,4], ylim = c(0,0.06) , horiz = T. las = 2)
barplot(summary(listOfModels1[[1]])$coefficients[,4], ylim = c(0,0.06) , horiz = T. las = 2)
barplot(summary(listOfModels1[[1]])$coefficients[,4], ylim = c(0,0.06) , horiz = T)
barplot(summary(listOfModels1[[1]])$coefficients[,4], ylim = c(0,0.06) , horiz = T)p
barplot(summary(listOfModels1[[1]])$coefficients[,4], ylim = c(0,0.06) , horiz = T)
par(las =2 2)
par(las =2 )
barplot(summary(listOfModels1[[1]])$coefficients[,4], ylim = c(0,0.06) , horiz = T)
barplot(summary(listOfModels1[[1]])$coefficients[,4], xlim = c(0,0.06) , horiz = T)
abline(h = 0.05, lty =2)
abline(v = 0.05, lty =2)
barplot(summary(listOfModels1[[1]])$coefficients[,4], xlim = c(0,0.06) , horiz = T)
abline(v = 0.05, lty =2)
par(mar = c(0,0,0,0))
barplot(summary(listOfModels1[[1]])$coefficients[,4], xlim = c(0,0.06) , horiz = T)
par(mar = c(5.1,5.1,4.1,2.1))
barplot(summary(listOfModels1[[1]])$coefficients[,4], xlim = c(0,0.06) , horiz = T)
abline(v = 0.05, lty =2)
par(mar = c(5.1,5,4.1,2.1))
barplot(summary(listOfModels1[[1]])$coefficients[,4], xlim = c(0,0.06) , horiz = T)
abline(v = 0.05, lty =2)
par(mar = c(5.1,4.5,4.1,2.1))
barplot(summary(listOfModels1[[1]])$coefficients[,4], xlim = c(0,0.06) , horiz = T)
?barplot
barplot(summary(listOfModels1[[1]])$coefficients[,4],
xlim = c(0,0.06) ,
horiz = T,
names.arg = colnames(leavesSiSpectra)[,gen[1,]])
barplot(summary(listOfModels1[[1]])$coefficients[,4],
xlim = c(0,0.06) ,
horiz = T,
names.arg = colnames(leavesSiSpectra)[,gen$bestsets[1,]])
View(gen$bestsets)
View(gen$bestsets[1,])
gen$bestsets[1,]
colnames(leavesSiSpectra[,gen$bestsets[1,]])
barplot(summary(listOfModels1[[1]])$coefficients[,4],
xlim = c(0,0.06) ,
horiz = T,
names.arg = colnames(leavesSiSpectra[,gen$bestsets[1,]]))
barplot(summary(listOfModels1[[1]])$coefficients[,4],
xlim = c(0,0.06) ,
horiz = T,
names.arg = c('intercept', colnames(leavesSiSpectra[,gen$bestsets[1,]])))
abline(v = 0.05, lty =2)
par(mfrow = c(3,3))
for(i in 1:9){
barplot(summary(listOfModels1[[i]])$coefficients[,4],
xlim = c(0,0.06) ,
horiz = T,
names.arg = c('intercept', colnames(leavesSiSpectra[,gen$bestsets[i,]])))
abline(v = 0.05, lty =2)
}
win.graph()
par(mfrow = c(3,3))
for(i in 1:9){
barplot(summary(listOfModels1[[i]])$coefficients[,4],
xlim = c(0,0.06) ,
horiz = T,
names.arg = c('intercept', colnames(leavesSiSpectra[,gen$bestsets[i,]])))
abline(v = 0.05, lty =2)
}
win.graph()
par(mfrow = c(3,3))
for(i in 1:9){
barplot(summary(listOfModels1[[i]])$coefficients[,4],
xlim = c(0,0.06) ,
horiz = T,
names.arg = c('intercept', colnames(leavesSiSpectra[,gen$bestsets[i,]])))
abline(v = 0.05, lty =2)
}
