title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
par(new = F)
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.1))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
par(mfrow = c(1,2))
for (i in 1:length(rownames(leavesSiSpectraRaw ))){
plot(as.numeric(colnames(leavesSiSpectraRaw )),
leavesSiSpectraRaw [i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.1))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
par(new = F)
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.1))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
for(i in 1:length(metadata$sample)) {
if(length(positions[[i]]) == 1){
metadata$spectra.index[i] <- positions[[i]]
}else{
metadata$spectra.index[i] <- NA
}
}
for(i in 1:length(metadata$sample)) {
if(length(positions[[i]]) == 1){
metadata$spectra.index[i] <- positions[[i]]
}else{
metadata$spectra.index[i] <- NA
}
}
metadata
metadata.leaves <- metadata[leaves.index,]
head(metadata.leaves)
leavesSiSpectra <- corrected[metadata.leaves.Si$spectra.index,]
leavesSiSpectraRaw <- mean[metadata.leaves.Si$spectra.index,]
View(metadata.leaves.Si)
View(metadata.leaves)
metadata.leaves.Si <- metadata.leaves[-c(11),]
metadata.leaves.Si
which(is.na(metadata.leaves$Si))
which(is.na(metadata.leaves$spectra))
metadata.leaves$sample[11]
metadata.leaves.Si <- metadata.leaves[-c(11),]
leavesSiSpectra <- corrected[metadata.leaves.Si$spectra.index,]
leavesSiSpectraRaw <- mean[metadata.leaves.Si$spectra.index,]
for(i in 1:length(metadata$sample)) {
if(length(positions[[i]]) == 1){
metadata$spectra[i] <-
rownames(corrected)[positions[[i]]]
}else{
metadata$spectra[i] <- NA
}
}
for(i in 1:length(metadata$sample)) {
if(length(positions[[i]]) == 1){
metadata$spectra[i] <-
rownames(corrected)[positions[[i]]]
}else{
metadata$spectra[i] <- NA
}
}
for(i in 1:length(metadata$sample)) {
if(length(positions[[i]]) == 1){
metadata$spectra[i] <-
rownames(corrected)[positions[[i]]]
}else{
metadata$spectra[i] <- NA
}
}
metadata.leaves <- metadata[leaves.index,]
A <- as.Date('2019-07-30')
B <- as.Date('2020-01-29')
C <- as.Date('2020-09-14')
D <- as.Date('2020-12-31')
E <- as.Date('2021-02-01')
F <- as.Date('2021-03-24')
G <- as.Date('2021-03-14')
H <- as.Date('2021-06-11')
sum(c(),)
sum(c(H-G,F-E,D-C,B-A))
sum(c(H-G,F-E,D-C,B-A))/30
leavesSiSpectra <- as.matrix(leavesSiSpectra)
SiTable <- data.frame(Si = I(metadata.leaves.Si$Si),spectra = I(leavesSiSpectra) )
nuevoRango <-   leavesSiSpectra[,c(261:676)]
colnames( leavesSiSpectra[,c(261,676)])
View(SiTable)
SiTable
str(SiTable)
View(leavesSiSpectra[,c(261:676)])
colnames( leavesSiSpectra[,c(261,676)])
library(pls)
SiPLS <- plsr(SiTable$Si~ newRange,
ncomp = 10,
data = SiTable,
validation = 'LOO')
leavesSiSpectra <- as.matrix(leavesSiSpectra)
SiTable <- data.frame(Si = I(metadata.leaves.Si$Si),spectra = I(leavesSiSpectra) )
newRange <-   leavesSiSpectra[,c(261:676)]
colnames( leavesSiSpectra[,c(261,676)])
library(pls)
SiPLS <- plsr(SiTable$Si~ newRange,
ncomp = 10,
data = SiTable,
validation = 'LOO')
library(pls)
SiPLS <- plsr(SiTable$Si~ newRange,
ncomp = 10,
data = SiTable,
validation = 'LOO')
summary(SiPLS)
library(pls)
SiPLS <- plsr(SiTable$Si~ newRange,
ncomp = 10,
data = SiTable,
validation = 'LOO')
plot(RMSEP(gas1), legendpos = "topright")
plot(RMSEP(SiPLS), legendpos = "topright")
A <- as.Date('2019-07-30')
B <- as.Date('2020-01-29')
C <- as.Date('2020-09-14')
D <- as.Date('2020-12-31')
E <- as.Date('2021-02-01')
F <- as.Date('2021-03-24')
G <- as.Date('2021-03-14')
H <- as.Date('2021-06-11')
sum(c(H-G,F-E,D-C,B-A))/30
sum(c(H-G,F-E,D-C,B-A))/30/12
1+1e-2.41
library(mdatools)
View(newRange)
library(mdatools)
LeavesPLS <- pls(NewRange,
SiTable$Si)
library(mdatools)
LeavesPLS <- pls(newRange,
SiTable$Si,
10,
scale=F,
cv =1)
library(mdatools)
LeavesPLS <- pls(newRange,
SiTable$Si,
10,
cv =1)
summary(humPLS)
summary(LeavesPLS)
summary(LeavesPLS$cal)
summary(LeavesPLS$res$cal)
plot(humPLS)
plot(LeavesPLS)
win.graph()
plot(LeavesPLS)
library(pls)
SiPLS <- plsr(SiTable$Si~ newRange,
ncomp = 10,
data = SiTable,
validation = 'LOO')
plot(RMSEP(SiPLS),type="b",legendpos="topright")
win.graph()
plot(RMSEP(SiPLS),type="b",legendpos="topright")
win.graph()
win.graph()
plot(LeavesPLS)
win.graph()
plot(LeavesPLS)
par(mfrow=c(2,2))
plotXVariance(LeavesPLS)
plotXCumVariance(LeavesPLS)
plotYVariance(LeavesPLS)
plotYCumVariance(LeavesPLS)
win.graph()
par(mfrow=c(2,2))
plotXVariance(LeavesPLS)
plotXCumVariance(LeavesPLS)
plotYVariance(LeavesPLS)
plotYCumVariance(LeavesPLS)
plot(LeavesPLS)
win.graph()
https://open.spotify.com/artist/6w1XCiB8efbfnusJ2jzmvu?si=MJKsBq9WTm2nNkKZ_E6xbA
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(leavesSiSpectra,
SiTable$Si,
10,
cv =1)
summary(LeavesPLS)
summary(LeavesPLS$res$cal)
plot(LeavesPLS)
library(mdatools)
LeavesPLS <- pls(newRange,
SiTable$Si,
10,
cv =1)
summary(LeavesPLS)
plot(LeavesPLS)
ga_pls(y, X, GA.threshold = 10, iters = 5, popSize = 100)
ga_pls(SiTable$Si, newRange, GA.threshold = 10, iters = 5, popSize = 100)
install.packages('plsVarSel')
library(plsVarSel)
ga_pls(SiTable$Si, newRange, GA.threshold = 10, iters = 5, popSize = 100)
library(plsVarSel)
ga_pls(SiTable$Si, leavesSiSpectra, GA.threshold = 10, iters = 5, popSize = 100)
library(plsVarSel)
gaVarSel <- ga_pls(SiTable$Si, leavesSiSpectra, GA.threshold = 10, iters = 5, popSize = 100)
View(gaVarSel)
library(plsVarSel)
gaVarSel <- ga_pls(SiTable$Si, leavesSiSpectra, GA.threshold = 10, iters = 5, popSize = 100)
gaLeavesPLs <-pls(leavesSiSpectra[,gaVarSel],
SiTable$Si,
10,
cv =1)
gaLeavesPLS <-pls(leavesSiSpectra[,unlist(gaVarSel)],
SiTable$Si,
10,
cv =1)
plot(gaLeavesPLS)
win.graph()
plot(gaLeavesPLS)
library(plsVarSel)
gaVarSel <- ga_pls(SiTable$Si, newRange, GA.threshold = 10, iters = 5, popSize = 100)
gaLeavesPLS <-pls(newRange[,unlist(gaVarSel)],
SiTable$Si,
10,
cv =1)
win.graph()
plot(gaLeavesPLS)
win.graph()
plot(gaLeavesPLS)
library(plsVarSel)
gaVarSel <- ga_pls(SiTable$Si, newRange, GA.threshold = 10, iters = 5, popSize = 100)
gaLeavesPLS <-pls(newRange[,unlist(gaVarSel)],
SiTable$Si,
10,
cv =1)
win.graph()
plot(gaLeavesPLS)
win.graph()
plot(LeavesPLS)
res.hk <-hkmeans(df,
5,
hc.metric =  'minkowski')
library(factoextra)
res.hk <-hkmeans(df,
5,
hc.metric =  'minkowski')
library(factoextra)
res.hk <-hkmeans(corrected,
5,
hc.metric =  'minkowski')
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE,
library(factoextra)
res.hk <-hkmeans(corrected,
5,
hc.metric =  'minkowski')
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
fviz_dend
?fviz_dend
for (i in 1:length(rownames(correctedMSC))){
plot(as.numeric(colnames(correctedMSC)),
correctedMSC[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.12),
col = 'white')
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste(
'Wave number (cm'^'-1',
')')),
ylab = 'Absorbance (a.u.)')
for (i in 1:length(rownames(correctedMSC))){
plot(as.numeric(colnames(correctedMSC)),
correctedMSC[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,1000),
ylim = c(0,100),
col = 'white')
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste(
'Wave number (cm'^'-1',
')')),
ylab = '% Transmittance')
for (i in 1:length(rownames(correctedMSC))){
plot(as.numeric(colnames(correctedMSC)),
correctedMSC[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(4000,1000),
ylim = c(0,100),
col = 'white')
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste(
'Wave number (cm'^'-1',
')')),
ylab = '% Transmittance')
win.graph()
for (i in 1:length(rownames(correctedMSC))){
plot(as.numeric(colnames(correctedMSC)),
correctedMSC[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(4000,1000),
ylim = c(0,100),
col = 'white')
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste(
'Wave number (cm'^'-1',
')')),
ylab = '% Transmittance')
win.graph()
for (i in 1:length(rownames(correctedMSC))){
plot(as.numeric(colnames(correctedMSC)),
correctedMSC[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(4000,1000),
ylim = c(0,100),
col = 'white')
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste(
'Wave number (cm'^'-1',
')')),
ylab = '% Transmittance')
win.graph()
for (i in 1:length(rownames(correctedMSC))){
plot(as.numeric(colnames(correctedMSC)),
correctedMSC[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(4000,400),
ylim = c(0,100),
col = 'white')
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste(
'Wave number (cm'^'-1',
')')),
ylab = '% Transmittance')
df1 <- corrected
View(df1)
View(metadata)
df <- corrected
which(metadata$class == NA)
is.na(metadata$class)
which(is.na(metadata$class))
metadata.class <- metadata[-c( which(is.na(metadata$class))),]
which(is.na(metadata.class))
which(is.na(metadata.class$class))
metadata.class <- metadata[-c( which(is.na(metadata$class))),]
which(is.na(metadata.class$class))
which(is.na(metadata.class$spectra.index))
metadata.class <- metadata[-c( which(is.na(metadata$class))),]
which(is.na(metadata.class$class))
which(is.na(metadata$class))
metadata.class <- metadata[-c( which(is.na(metadata$class))),]
which(is.na(metadata.class$class))
spectra.class <- corrected[metadata.class$spectra.index,]
compare.class <- data.frame(classification = metadata.class$sample
spectra= rownames(spectra.class))
compare.class <- data.frame(classification = metadata.class$sample,
spectra= rownames(spectra.class))
compare.class <- data.frame(classification = metadata.class$sample,
spectra= rownames(spectra.class))
head(compare.class)
compare.class
which(is.na(rownames(corrected[metadata.class$spectra.index,])))
metadata.class <- metadata[-c( which(is.na(metadata$class))),]
which(is.na(metadata.class$class))
which(!is.numeric(rownames(corrected[metadata.class$spectra.index,])))
rownames(corrected)
metadata.class$spectra.index
which(is.na(metadata.class$spectra.index))
metadata.class2 <- metadata.class[-c( which(is.na(metadata$spectra.index))),]
metadata.class2 <- metadata.class[-c( which(is.na(metadata$spectra.index))),]
which(is.na(metadata.class2$spectra.index))
metadata.class
View(metadata.class)
which(is.na(metadata.class$spectra.index))
metadata.class2 <- metadata.class[-c(24, 26, 29, 32, 35 ),]
which(is.na(metadata.class2$spectra.index))
metadata.class2 <- metadata.class[-c(which(is.na(metadata.class$spectra.index)) ),]
which(is.na(metadata.class2$spectra.index))
spectra.class <- corrected[metadata.class2$spectra.index,]
compare.class <- data.frame(classification = metadata.class$sample,
spectra= rownames(spectra.class))
compare.class <- data.frame(classification = metadata.class2$sample,
spectra= rownames(spectra.class))
head(compare.class)
df1 <- spectra.class
rownames(df1) <- metadata.class2$class
names.class <- paste(metadata.class2$class, rownames(spectra.class))
df1 <- spectra.class
names.class <- paste(metadata.class2$class, rownames(spectra.class))
rownames(df1) <- names.class
library(factoextra)
res.hk <-hkmeans(df1,
5,
hc.metric =  'minkowski')
fviz_dend(res.hk, cex = 0.1, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
df1 <- spectra.class
names.class <- paste(metadata.class2$class, rownames(spectra.class))
rownames(df1) <- names.class
library(factoextra)
res.hk <-hkmeans(df1,
5,
hc.metric =  'minkowski')
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
df1 <- spectra.class
names.class <- paste(metadata.class2$class, rownames(spectra.class))
rownames(df1) <- names.class
library(factoextra)
res.hk <-hkmeans(df1,
5,
hc.metric =  'euclidean')
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
df1 <- spectra.class
names.class <- paste(metadata.class2$class, rownames(spectra.class))
rownames(df1) <- names.class
library(factoextra)
res.hk <-hkmeans(df1,
5,
hc.metric =  'euclidean')
fviz_dend(res.hk, cex = 0.5, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
