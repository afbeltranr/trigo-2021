View(gen$values)
LIBRARY(LMVAR)
library(lmvar)
install.packages('lmvar')
library(lmvar)
cv.lm(mols,
k = nrow(leav)
)
mols <- lm(metadata.leaves.Si$Si ~ leavesSiSpectra[,gen$bestsets[12,]], y = T)
summary(mols)
library(lmvar)
cv.lm(mols,
k = nrow(leav)
)
library(lmvar)
cv.lm(mols,
k = nrow(leav)
)
mols <- lm(metadata.leaves.Si$Si ~ leavesSiSpectra[,gen$bestsets[12,]], y = T, x = T)
summary(mols)
library(lmvar)
cv.lm(mols,
k = nrow(leav)
)
View(mols)
View(mols$x)
View(SiTable$spectra)
View(SiTable)
library(pls)
SiPLS <- plsr(SiTable$Si~ leavesSiSpectra,
ncomp = 10,
data = SiTable,
validation = 'LOO')
plot(RMSEP(SiPLS),type="b",legendpos="topright")
View(leavesSiSpectra)
library(pls)
SiPLS <- plsr(SiTable$Si~ leavesSiSpectra,
ncomp = 10,
data = SiTable,
validation = 'LOO')
plot(SiPLS,ncomp=5,line=TRUE)
plot(SiPLS,ncomp=3,line=TRUE)
barplot(explvar(SiPLS)[1:4])
library(pls)
SiPLSgen <- plsr(SiTable$Si~ leavesSiSpectra[,gen$bestsets[12,]], ncomp = 10,
data = SiTable,
validation = 'LOO')
plot(RMSEP(SiPLSgen),type="b",legendpos="topright")
plot(SiPLS,ncomp=3,line=TRUE)
plot(SiPLS,ncomp=4,line=TRUE)
plot(SiPLS,ncomp=5,line=TRUE)
names <- list.files(pattern = '.CSV')
spectra.list <- lapply(names, read.csv, header = F)
wavenumbers <- unlist(spectra.list[[1]][1])
spectra.list2 <- lapply(spectra.list, '[', 2)
spectra.df <- as.data.frame(t(as.data.frame(spectra.list2)))
rownames(spectra.df) <- names
colnames(spectra.df) <- wavenumbers
# gsub('.{6}$', '', names)
names2 <- gsub('.{4}$', '', rownames(spectra.df))
names2[292:318] <- gsub('.{41}$', '', rownames(spectra.df)[292:318])
rownames(spectra.df) <- names
cols <- factor(gsub('.{2}$', '', names2))
for(i in  1:length(rownames(spectra.df))){
plot(wavenumbers,
spectra.df[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(4000, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = 'raw spectra full range',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
colnames(spectra.df)[c(1,676)]
range1 <- spectra.df[,c(1:676)]
wavenumbers1 <- wavenumbers[c(1:676)]
for(i in  1:length(rownames(range1))){
plot(wavenumbers1,
range1[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(1700, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = 'raw spectra - ROI',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
search.vector <- unique(unlist(cols))
index <- list(106)
for (i in 1:106){
index[[i]] <- which(grepl(paste0('(?=.*',as.character(search.vector[i]),')'),
rownames(spectra.df),
perl=T
)
)
}
mean <- matrix(ncol= ncol(range1),
nrow = nrow(range1)/3)
# mean <- as.data.frame(mean)
colnames(mean) <- colnames(range1)
rownames(mean) <- search.vector
for(j in 1:length(colnames(range1))){
for(i in 1:length(rownames(mean))){
mean[i,j] <- mean(c(range1[index[[i]][1],j],
range1[index[[i]][2],j],
range1[index[[i]][3],j]
) )
}
}
mean <- as.data.frame(mean)
cols.means <- as.factor(search.vector)
for(i in  1:length(rownames(mean))){
plot(wavenumbers1,
mean[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(1700, 400),
ylim= c(0,0.2),
type = 'l',
col =cols.means[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = 'averaged spectra',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
library(hyperSpec)
spc <- new('hyperSpec',
spc= mean,
wavelength = wavenumbers1)
bend <- 0.1 * wl.eval(spc,
function (x) x^6+x^5+x^4+x^3+x^2,
normalize.wl = normalize01)
bl <- spc.rubberband(spc+bend, noise = 1e-4, df = 20)-bend
suma <- spc+bend
spc3 <- spc - bl
plot(spc, wl.reverse = TRUE)
plot(bl, add=TRUE, col=2,wl.reverse = TRUE)
plot(suma,wl.reverse = TRUE)
plot(bend, add=TRUE, col=2,wl.reverse = TRUE)
plot(spc3,wl.reverse = TRUE)
corrected1  <- as.data.frame(spc3[1:106])
corrected <- as.data.frame(corrected1[,1])
# par(mfrow = c(2,2))
#
# for(i in  1:length(rownames(spectra.df))){
#
#   plot(wavenumbers,
#     spectra.df[i,],
#     axes = F,
#     xlab = '',
#     ylab = '',
#     xlim = c(4000, 400),
#     ylim= c(0,0.2),
#     type = 'l',
#     col =cols[i]
#
#   )
#   par(new = T)
# }
#
# box()
# axis(1)
# axis(2)
# title(main = 'raw spectra full range',
#       xlab = expression(paste('Wave number (cm'^'-1',')')),
#       ylab ='absorbance (a.u.)')
#
# for(i in  1:length(rownames(range1))){
#
#   plot(wavenumbers1,
#     range1[i,],
#     axes = F,
#     xlab = '',
#     ylab = '',
#     xlim = c(1700, 400),
#     ylim= c(0,0.2),
#     type = 'l',
#     col =cols[i]
#
#   )
#   par(new = T)
# }
#
# box()
# axis(1)
# axis(2)
# title(main = 'raw spectra - ROI',
#       xlab = expression(paste('Wave number (cm'^'-1',')')),
#       ylab ='absorbance (a.u.)')
#
#
# for(i in  1:length(rownames(mean))){
#
#   plot(wavenumbers1,
#     mean[i,],
#     axes = F,
#     xlab = '',
#     ylab = '',
#     xlim = c(1700, 400),
#     ylim= c(0,0.2),
#     type = 'l',
#     col =cols.means[i]
#
#   )
#   par(new = T)
# }
#
# box()
# axis(1)
# axis(2)
# title(main = 'averaged spectra',
#       xlab = expression(paste('Wave number (cm'^'-1',')')),
#       ylab ='absorbance (a.u.)')
#
# for(i in  1:length(rownames(mean))){
#
#   plot(wavenumbers1,
#     corrected[i,],
#     axes = F,
#     xlab = '',
#     ylab = '',
#     xlim = c(1700, 400),
#     ylim= c(0,0.1),
#     type = 'l',
#     col =cols.means[i]
#
#   )
#   par(new = T)
# }
#
# box()
# axis(1)
# axis(2)
# title(main = 'corrected spectra',
#       xlab = expression(paste('Wave number (cm'^'-1',')')),
#       ylab ='absorbance (a.u.)')
library(readxl)
metadata <- read_excel("metadata.xlsx")
which(is.na(metadata$sample))
metadata <- metadata[-c(17),]
which(is.na(metadata$sample))
positions <- vector('list', 87) # the same sizeas metadata$sample
for (i in 1:87){
positions[[i]] <- which(grepl(paste0('(?=.*',as.character(metadata$sample[i]),')'),rownames(corrected), perl=T))
}
metadata$sample[1]
rownames(corrected)[positions[[1]]]
for(i in 1:length(metadata$sample)) {
if(length(positions[[i]]) == 1){
metadata$spectra[i] <- rownames(corrected)[positions[[i]]]
}else{
metadata$spectra[i] <- NA
}
}
data.frame(metadata = metadata$sample, spectra = metadata$spectra)
for(i in 1:length(metadata$sample)) {
if(length(positions[[i]]) == 1){
metadata$spectra.index[i] <- positions[[i]]
}else{
metadata$spectra.index[i] <- NA
}
}
leaves.index <- which(grepl(paste0('(?=.*','L',')'),metadata$class,perl = T))
leaves.index
metadata.leaves <- metadata[leaves.index,]
metadata.leaves
which(is.na(metadata.leaves$Si))
which(is.na(metadata.leaves$spectra))
metadata.leaves$sample[11]
metadata.leaves.Si <- metadata.leaves[-c(11),]
LeavesSi <- cbind(metadata.leaves.Si$sample,metadata.leaves.Si$Si)
leavesSiSpectra <- corrected[metadata.leaves.Si$spectra.index,]
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
leavesSiSpectra <- as.matrix(leavesSiSpectra)
SiTable <- data.frame(Si = I(metadata.leaves.Si$Si),spectra = I(leavesSiSpectra) )
library(pls)
SiPLS <- plsr(SiTable$Si~ leavesSiSpectra,
ncomp = 10,
data = SiTable,
validation = 'LOO')
plot(RMSEP(SiPLS),type="b",legendpos="topright")
plot(SiPLS,ncomp=3,line=TRUE)
plot(SiPLS,plottype="scores",comps=1:4)
barplot(explvar(SiPLS)[1:4])
library(subselect)
Hmat <- lmHmat(leavesSiSpectra,metadata.leaves.Si$Si)
gen <- genetic(Hmat$mat, kmin =4, kmax = 15, H= Hmat$H, r =1, crit = 'CCR12', force = T)
colnames(leavesSiSpectra)[gen$bestsets[12,]]
mols <- lm(metadata.leaves.Si$Si ~ leavesSiSpectra[,gen$bestsets[12,]], y = T, x = T)
summary(mols)
library(pls)
SiPLSgen <- plsr(SiTable$Si~ leavesSiSpectra[,gen$bestsets[12,]], ncomp = 10,
data = SiTable,
validation = 'LOO')
plot(RMSEP(SiPLSgen),type="b",legendpos="topright")
plot(SiPLS,ncomp=6,line=TRUE)
plot(SiPLS,ncomp=7,line=TRUE)
plot(SiPLS,ncomp=8,line=TRUE)
plot(SiPLS,ncomp=10,line=TRUE)
plot(SiPLS,ncomp=1,line=TRUE)
plot(SiPLS,ncomp=10,line=TRUE)
?genetic
library(subselect)
?genetic
plot(SiPLS,ncomp=3,line=TRUE)
library(pls)
SiPLSgen <- plsr(SiTable$Si~ leavesSiSpectra[,gen$bestsets[12,]], ncomp = 10,
data = SiTable,
validation = 'LOO')
plot(RMSEP(SiPLSgen),type="b",legendpos="topright")
plot(SiPLS,ncomp=3,line=TRUE)
which(mols$coefficients<0 )
str(leavesSiSpectra[,gen$bestsets[1,]])
plot(SiPLSgen,ncomp=3,line=TRUE)
plot(SiPLSgen,ncomp=10,line=TRUE)
par(mfrow=c(2,5)){
nrow(gen$bestsets)
win.graph()
par(mfrow=c(3,4))
for(j in 1:nrow(gen$bestsets)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(h = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[i,]]),
col = 2,
lty = 2)
}
win.graph()
par(mfrow=c(3,4))
for(j in 1:nrow(gen$bestsets)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(h = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 2,
lty = 2)
}
par(mfrow=c(3,4))
for(j in 1:nrow(gen$bestsets)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(h = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 2,
lty = 2)
}
par(mfrow=c(3,4))
for(j in 1:nrow(gen$bestsets)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 2,
lty = 2)
}
par(mfrow=c(3,4))
for(j in 1:nrow(gen$bestsets)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(4:15[j])'variables'),
par(mfrow=c(3,4))
for(j in 1:nrow(gen$bestsets)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(4:15[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 2,
lty = 2)
}
par(mfrow=c(3,4))
for(j in 1:nrow(gen$bestsets)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = paste(as.character(c(4:15)[j]),'variables'),
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[j,]]),
col = 2,
lty = 2)
}
