rep(15000,3)[i+1],
c(expression(paste('R'['adj']^'2','= 0.7823')),
expression(paste('R'['adj']^'2','= 0.9782')),
expression(paste('R'['adj']^'2','= 0.9965')))[i+1],
col = 'black',
cex= 1.2
)
}
win.graph()
par(mfcol=c(3,2))
for(j in c(0,1,2)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[(4*j)+1,]]),
col = 1,
lty = 2)
text(1560,
0.055,
c('4 variables', '8 variables', '12 variables')[j+1],
lty = 2,
col = 'black',
cex = 1,
font = 4
)
}
## Curvas de calibracion
for(i in c(0,1,2)){
plot(predX8Var,
listOfPredictions1[[(4*i)+1]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
text(rep(15000,3)[i+1],
rep(62000,3)[i+1],
c(expression(paste('R'['adj']^'2','= 0.7823')),
expression(paste('R'['adj']^'2','= 0.9782')),
expression(paste('R'['adj']^'2','= 0.9965')))[i+1],
col = 'black',
cex= 1.2
)
text(rep(60000,3)[i+1],
rep(15000,3)[i+1],
c(expression(paste('R'['adj']^'2','= 0.7823')),
expression(paste('R'['adj']^'2','= 0.9782')),
expression(paste('R'['adj']^'2','= 0.9965')))[i+1],
col = 'black',
cex= 1.2
)
}
win.graph()
par(mfcol=c(3,2))
for(j in c(0,1,2)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[(4*j)+1,]]),
col = 1,
lty = 2)
text(1560,
0.055,
c('4 variables', '8 variables', '12 variables')[j+1],
lty = 2,
col = 'black',
cex = 1,
font = 4
)
}
## Curvas de calibracion
for(i in c(0,1,2)){
plot(predX8Var,
listOfPredictions1[[(4*i)+1]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
text(rep(15000,3)[i+1],
rep(62000,3)[i+1],
c(expression(paste('R'['adj']^'2','= 0.7823')),
expression(paste('R'['adj']^'2','= 0.9782')),
expression(paste('R'['adj']^'2','= 0.9965')))[i+1],
col = 'black',
cex= 1.2
)
text(rep(60000,3)[i+1],
rep(10000,3)[i+1],
c(expression(paste('R'['adj']^'2','= 0.7823')),
expression(paste('R'['adj']^'2','= 0.9782')),
expression(paste('R'['adj']^'2','= 0.9965')))[i+1],
col = 'black',
cex= 1.2
)
}
win.graph()
par(mfcol=c(3,2))
for(j in c(0,1,2)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[(4*j)+1,]]),
col = 1,
lty = 2)
text(1560,
0.055,
c('4 variables', '8 variables', '12 variables')[j+1],
lty = 2,
col = 'black',
cex = 1,
font = 4
)
}
## Curvas de calibracion
for(i in c(0,1,2)){
plot(predX8Var,
listOfPredictions1[[(4*i)+1]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
text(rep(15000,3)[i+1],
rep(62000,3)[i+1],
c(expression(paste('R'['adj']^'2','= 0.7823')),
expression(paste('R'['adj']^'2','= 0.9782')),
expression(paste('R'['adj']^'2','= 0.9965')))[i+1],
col = 'black',
cex= 1.2
)
text(rep(60000,3)[i+1],
rep(10000,3)[i+1],
c(expression(paste('p'['model'],'= 1.51e+06')),
expression(paste('p'['model'],'= 1.14e-11')),
expression(paste('p'['model'],'= 2.42e-12')))[i+1],
col = 'black',
cex= 1.2
)
}
par(mfcol=c(3,2))
for(j in c(0,1,2)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[(4*j)+1,]]),
col = 1,
lty = 2)
text(1560,
0.055,
c('4 variables', '8 variables', '12 variables')[j+1],
lty = 2,
col = 'black',
cex = 1,
font = 4
)
}
## Curvas de calibracion
for(i in c(0,1,2)){
plot(predX8Var,
listOfPredictions1[[(4*i)+1]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
text(rep(15000,3)[i+1],
rep(62000,3)[i+1],
c(expression(paste('R'['adj']^'2','= 0.7823')),
expression(paste('R'['adj']^'2','= 0.9782')),
expression(paste('R'['adj']^'2','= 0.9965')))[i+1],
col = 'black',
cex= 1.2
)
text(rep(60000,3)[i+1],
rep(5000,3)[i+1],
c(expression(paste('p'['model'],'= 1.51e+06')),
expression(paste('p'['model'],'= 1.14e-11')),
expression(paste('p'['model'],'= 2.42e-12')))[i+1],
col = 'black',
cex= 1.2
)
}
win.graph()
par(mfcol=c(3,2))
for(j in c(0,1,2)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[(4*j)+1,]]),
col = 1,
lty = 2)
text(1560,
0.055,
c('4 variables', '8 variables', '12 variables')[j+1],
lty = 2,
col = 'black',
cex = 1,
font = 4
)
}
## Curvas de calibracion
for(i in c(0,1,2)){
plot(predX8Var,
listOfPredictions1[[(4*i)+1]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
text(rep(15000,3)[i+1],
rep(62000,3)[i+1],
c(expression(paste('R'['adj']^'2','= 0.7823')),
expression(paste('R'['adj']^'2','= 0.9782')),
expression(paste('R'['adj']^'2','= 0.9965')))[i+1],
col = 'black',
cex= 1.2
)
text(rep(55000,3)[i+1],
rep(5000,3)[i+1],
c(expression(paste('p'['model'],'= 1.51e+06')),
expression(paste('p'['model'],'= 1.14e-11')),
expression(paste('p'['model'],'= 2.42e-12')))[i+1],
col = 'black',
cex= 1.2
)
}
par(mfcol=c(3,2))
for(j in c(0,1,2)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[(4*j)+1,]]),
col = 1,
lty = 2)
text(1560,
0.055,
c('4 variables', '8 variables', '12 variables')[j+1],
lty = 2,
col = 'black',
cex = 1,
font = 4
)
}
## Curvas de calibracion
for(i in c(0,1,2)){
plot(predX8Var,
listOfPredictions1[[(4*i)+1]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
text(rep(15000,3)[i+1],
rep(62000,3)[i+1],
c(expression(paste('R'['adj']^'2','= 0.7823')),
expression(paste('R'['adj']^'2','= 0.9782')),
expression(paste('R'['adj']^'2','= 0.9965')))[i+1],
col = 'black',
cex= 1.2
)
text(rep(55000,3)[i+1],
rep(5000,3)[i+1],
c(expression(paste('p'['model'],'= 1.51e+06')),
expression(paste('p'['model'],'= 1.14e-11')),
expression(paste('p'['model'],'= 2.42e-12')))[i+1],
col = 'black',
cex= 1.2,
font = 4
)
}
par(mfcol=c(3,2))
for(j in c(0,1,2)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[(4*j)+1,]]),
col = 1,
lty = 2)
text(1560,
0.055,
c('4 variables', '8 variables', '12 variables')[j+1],
lty = 2,
col = 'black',
cex = 1,
font = 4
)
}
## Curvas de calibracion
for(i in c(0,1,2)){
plot(predX8Var,
listOfPredictions1[[(4*i)+1]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
text(rep(15000,3)[i+1],
rep(62000,3)[i+1],
c(expression(paste('R'['adj']^'2','= 0.7823')),
expression(paste('R'['adj']^'2','= 0.9782')),
expression(paste('R'['adj']^'2','= 0.9965')))[i+1],
col = 'black',
cex= 1.2,
font = 4
)
text(rep(55000,3)[i+1],
rep(5000,3)[i+1],
c(expression(paste('p'['model'],'= 1.51e+06')),
expression(paste('p'['model'],'= 1.14e-11')),
expression(paste('p'['model'],'= 2.42e-12')))[i+1],
col = 'black',
cex= 1.2,
font = 4
)
}
tiff('./plots/VarSelectionCalLines.tiff',
width = 10000,
height = 12960,
res = 1500
)
# win.graph()
par(mfcol=c(3,2))
for(j in c(0,1,2)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[(4*j)+1,]]),
col = 1,
lty = 2)
text(1560,
0.055,
c('4 variables', '8 variables', '12 variables')[j+1],
lty = 2,
col = 'black',
cex = 1,
font = 4
)
}
## Curvas de calibracion
for(i in c(0,1,2)){
plot(predX8Var,
listOfPredictions1[[(4*i)+1]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
text(rep(15000,3)[i+1],
rep(62000,3)[i+1],
c(expression(paste('R'['adj']^'2','= 0.7823')),
expression(paste('R'['adj']^'2','= 0.9782')),
expression(paste('R'['adj']^'2','= 0.9965')))[i+1],
col = 'black',
cex= 1.2,
font = 4
)
text(rep(55000,3)[i+1],
rep(5000,3)[i+1],
c(expression(paste('p'['model'],'= 1.51e+06')),
expression(paste('p'['model'],'= 1.14e-11')),
expression(paste('p'['model'],'= 2.42e-12')))[i+1],
col = 'black',
cex= 1.2,
font = 4
)
}
dev.off()
