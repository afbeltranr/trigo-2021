col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[(4*j)+1,]]),
col = 1,
lty = 2)
text(1560,
0.055,
c('4 variables', '8 variables', '12 variables')[j+1],
lty = 2,
col = 'black',
cex = 1,
font = 4
)
}
## Curvas de calibracion
for(i in c(0,1,2)){
plot(predX8Var,
listOfPredictions1[[(4*i)+1]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
text(rep(15000,3)[i+1],
rep(62000,3)[i+1],
c(expression(paste('R'['adj']^'2','= 0.7823')),
expression(paste('R'['adj']^'2','= 0.9782')),
expression(paste('R'['adj']^'2','= 0.9965')))[i+1],
col = 'black',
cex= 1.2,
font = 4
)
text(rep(55000,3)[i+1],
rep(5000,3)[i+1],
c(expression(paste('p'['model'],'= 1.51e+06')),
expression(paste('p'['model'],'= 1.14e-11')),
expression(paste('p'['model'],'= 2.42e-12')))[i+1],
col = 'black',
cex= 1.2,
font = 4
)
}
dev.off()
tiff('./plots/VarSelectionCalLines.tiff',
width = 10000,
height = 12960,
res = 1500
)
# win.graph()
par(mfcol=c(3,2))
for(j in c(0,1,2)){
for (i in 1:length(rownames(leavesSiSpectra))){
plot(as.numeric(colnames(leavesSiSpectra)),
leavesSiSpectra[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
abline(v = as.numeric(colnames(leavesSiSpectra)[gen$bestsets[(4*j)+1,]]),
col = 1,
lty = 2)
text(1560,
0.055,
c('4 variables', '8 variables', '12 variables')[j+1],
lty = 2,
col = 'black',
cex = 1,
font = 4
)
}
## Curvas de calibracion
for(i in c(0,1,2)){
plot(predX8Var,
listOfPredictions1[[(4*i)+1]],
xlab="Actual Si (mg/kg)" ,
ylab="Predicted Si (mg/kg)",
pch=17,
cex=1.2,
col="darkorchid4",
cex.lab=1
)
abline(a=0  , b=1, col=1, lty=1, lwd=2)
text(rep(15000,3)[i+1],
rep(62000,3)[i+1],
c(expression(paste('R'['adj']^'2','= 0.7823')),
expression(paste('R'['adj']^'2','= 0.9782')),
expression(paste('R'['adj']^'2','= 0.9965')))[i+1],
col = 'black',
cex= 1.2,
font = 4
)
text(rep(55000,3)[i+1],
rep(5000,3)[i+1],
c(expression(paste('p'['model'],'= 1.51e+06')),
expression(paste('p'['model'],'= 1.14e-11')),
expression(paste('p'['model'],'= 2.42e-12')))[i+1],
col = 'black',
cex= 1.2,
font = 4
)
}
dev.off()
names <- list.files(pattern = '.CSV')
spectra.list <- lapply(names, read.csv, header = F)
wavenumbers <- unlist(spectra.list[[1]][1])
spectra.list2 <- lapply(spectra.list, '[', 2)
spectra.df <- as.data.frame(t(as.data.frame(spectra.list2)))
gsub('.{6}$', '', names)
rownames(spectra.df) <- names
colnames(spectra.df) <- wavenumbers
# gsub('.{6}$', '', names)
rownames(spectra.df) <- names
colnames(spectra.df) <- wavenumbers
# gsub('.{6}$', '', names)
View(spectra.df)
names
names2
names2 <- gsub('.{4}$', '', rownames(spectra.df))
names2
names2 <- gsub('.{4}$', '', rownames(spectra.df))
head(names2)
head(names)
head(names2[292:318])
names2[292:318] <- gsub('.{41}$', '', rownames(spectra.df)[292:318])
head(names2[292:318])
rownames(spectra.df) <- names2
cols <- factor(gsub('.{2}$', '', names2))
head(cols)
for(i in  1:length(rownames(spectra.df))){
plot(wavenumbers,
spectra.df[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(4000, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = 'raw spectra full range',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
for(i in  1:length(rownames(spectra.df))){
plot(wavenumbers,
spectra.df[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(4000, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
colnames(spectra.df)[c(1,676)]
search.vector <- unique(unlist(cols))
head(seach.vector)
search.vector <- unique(unlist(cols))
head(search.vector)
318/3
for (i in 1:106){
index[[i]] <- which(grepl(paste0('(?=.*',as.character(search.vector[i]),')'),
rownames(spectra.df),
perl=T
)
)
}
index <- list(106)
which(grepl(paste0('(?=.*',as.character(search.vector[1]),')') ) )
which(
grepl(
paste0('(?=.*',as.character(search.vector[1]),')')
)
)
search.vector <- unique(unlist(cols))
head(search.vector)
which(
grepl(
paste0('(?=.*',as.character(search.vector[1]),')')
)
)
paste0('(?=.*',as.character(search.vector[1]),')')
which(
grepl(
paste0('(?=.*',as.character(search.vector[1]),')'),
rownames(spectra.df),
perl=T
)
)
as.character(search.vector[1])
which(
grepl(
paste0('(?=.*',as.character(search.vector[1]),')'),
rownames(spectra.df),
perl=T
)
)
for (i in 1:106){
index[[i]] <- which(
grepl(
paste0('(?=.*',as.character(search.vector[i]),')'),
rownames(spectra.df),
perl=T
)
)
}
as.character(search.vector[1]) # the name of the first sample
which(
grepl(
paste0('(?=.*',as.character(search.vector[1]),')'),
rownames(spectra.df),
perl=T
)
)
rownames(spectra.df)[c(1, 2, 3)]
for (i in 1:106){
index[[i]] <- which(
grepl(
paste0('(?=.*',as.character(search.vector[i]),')'),
rownames(spectra.df),
perl=T
)
)
}
index[[1]]
index[[2]]
rownames(spectra.df)[c(index[[2]])]
search.vector[2]
rownames(spectra.df)[c(index[[2]])]
print(search.vector[2])
rownames(spectra.df)[c(index[[2]])]
search.vector[2]
rownames(spectra.df)[c(index[[2]])]
colnames(range1)
names <- list.files(pattern = '.CSV')
spectra.list <- lapply(names, read.csv, header = F)
wavenumbers <- unlist(spectra.list[[1]][1])
spectra.list2 <- lapply(spectra.list, '[', 2)
spectra.df <- as.data.frame(t(as.data.frame(spectra.list2)))
rownames(spectra.df) <- names
colnames(spectra.df) <- wavenumbers
# gsub('.{6}$', '', names)
head(names)
names2 <- gsub('.{4}$', '', rownames(spectra.df))
head(names2)
head(names2[292:318])
names2[292:318] <- gsub('.{41}$', '', rownames(spectra.df)[292:318])
head(names2[292:318])
rownames(spectra.df) <- names2
cols <- factor(gsub('.{2}$', '', names2))
head(cols)
for(i in  1:length(rownames(spectra.df))){
plot(wavenumbers,
spectra.df[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(4000, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
colnames(spectra.df)[c(1,676)]
range1 <- spectra.df[,c(1:676)]
wavenumbers1 <- wavenumbers[c(1:676)]
for(i in  1:length(rownames(range1))){
plot(wavenumbers1,
range1[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(1700, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = 'raw spectra - ROI',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
search.vector <- unique(unlist(cols))
head(search.vector)
index <- list(106)
as.character(search.vector[1]) # the name of the first sample
which(
grepl(
paste0('(?=.*',as.character(search.vector[1]),')'),
rownames(spectra.df),
perl=T
)
)
rownames(spectra.df)[c(1, 2, 3)]
for (i in 1:106){
index[[i]] <- which(
grepl(
paste0('(?=.*',as.character(search.vector[i]),')'),
rownames(spectra.df),
perl=T
)
)
}
search.vector[2]
rownames(spectra.df)[c(index[[2]])]
mean <- matrix(ncol= ncol(range1),
nrow = nrow(range1)/3)
# mean <- as.data.frame(mean)
colnames(mean) <- colnames(range1)
rownames(mean) <- search.vector
for(j in 1:length(colnames(range1))){
for(i in 1:length(rownames(mean))){
mean[i,j] <- mean(c(range1[index[[i]][1],j],
range1[index[[i]][2],j],
range1[index[[i]][3],j]
) )
}
}
mean <- as.data.frame(mean)
length(rownames(mean))
nrow(mean)
?mean
mean[1,1]
names <- list.files(pattern = '.CSV')
spectra.list <- lapply(names, read.csv, header = F)
wavenumbers <- unlist(spectra.list[[1]][1])
spectra.list2 <- lapply(spectra.list, '[', 2)
spectra.df <- as.data.frame(t(as.data.frame(spectra.list2)))
rownames(spectra.df) <- names
colnames(spectra.df) <- wavenumbers
# gsub('.{6}$', '', names)
head(names)
names2 <- gsub('.{4}$', '', rownames(spectra.df))
head(names2)
head(names2[292:318])
names2[292:318] <- gsub('.{41}$', '', rownames(spectra.df)[292:318])
head(names2[292:318])
rownames(spectra.df) <- names2
cols <- factor(gsub('.{2}$', '', names2))
head(cols)
for(i in  1:length(rownames(spectra.df))){
plot(wavenumbers,
spectra.df[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(4000, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
colnames(spectra.df)[c(1,676)]
range1 <- spectra.df[,c(1:676)]
wavenumbers1 <- wavenumbers[c(1:676)]
for(i in  1:length(rownames(range1))){
plot(wavenumbers1,
range1[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(1700, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = 'raw spectra - ROI',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
search.vector <- unique(unlist(cols))
head(search.vector)
index <- list(106)
as.character(search.vector[1]) # the name of the first sample
which(
grepl(
paste0('(?=.*',as.character(search.vector[1]),')'),
rownames(spectra.df),
perl=T
)
)
rownames(spectra.df)[c(1, 2, 3)]
for (i in 1:106){
index[[i]] <- which(
grepl(
paste0('(?=.*',as.character(search.vector[i]),')'),
rownames(spectra.df),
perl=T
)
)
}
search.vector[2]
rownames(spectra.df)[c(index[[2]])]
mean <- matrix(ncol= ncol(range1),
nrow = nrow(range1)/3)
# mean <- as.data.frame(mean)
colnames(mean) <- colnames(range1)
rownames(mean) <- search.vector
mean[1,1]
rownames(range1)[``]
rownames(range1)[1]
colnames(range1)[1]
index[[1]]
for(j in 1:ncol(range1)){
for(i in 1:nrow(mean)){
mean[i,j] <- mean(c(range1[index[[i]][1],j],
range1[index[[i]][2],j],
range1[index[[i]][3],j]
) )
}
}
?`data.frame-class`
?`data.frame`
for(j in 1:ncol(range1)){
for(i in 1:nrow(mean)){
mean[i,j] <- mean(c(range1[index[[i]][1],j],
range1[index[[i]][2],j],
range1[index[[i]][3],j]
) )
}
}
mean <- as.data.frame(mean)
cols.means <- as.factor(search.vector)
for(i in  1:length(rownames(mean))){
plot(wavenumbers1,
mean[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(1700, 400),
ylim= c(0,0.135309),
type = 'l',
col =cols.means[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
?rubberband
?hyperspec::rubberband
?hyperSpec::rubberband
?hyperSpec::spc.rubberband
?spc
?hyperSpec
?hyperSpec::`hyperSpec-class`
str(bend)
library(hyperSpec)
# hyperSpec package functions and
#data is charged in this session
spc <- new('hyperSpec', # The class of the object
spc= mean, # the spectra matrix
wavelength = wavenumbers1) # independent varialble, whether wave number or wave length
?wl.eval
?spc.rubberband
