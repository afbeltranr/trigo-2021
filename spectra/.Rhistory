cols <- factor(gsub('.{2}$', '', names2))
head(cols)
for(i in  1:length(rownames(spectra.df))){
plot(wavenumbers,
spectra.df[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(4000, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
colnames(spectra.df)[c(1,676)]
range1 <- spectra.df[,c(1:676)]
wavenumbers1 <- wavenumbers[c(1:676)]
for(i in  1:length(rownames(range1))){
plot(wavenumbers1,
range1[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(1700, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = 'raw spectra - ROI',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
search.vector <- unique(unlist(cols))
head(search.vector)
index <- list(106)
as.character(search.vector[1]) # the name of the first sample
which(
grepl(
paste0('(?=.*',as.character(search.vector[1]),')'),
rownames(spectra.df),
perl=T
)
)
rownames(spectra.df)[c(1, 2, 3)]
for (i in 1:106){
index[[i]] <- which(
grepl(
paste0('(?=.*',as.character(search.vector[i]),')'),
rownames(spectra.df),
perl=T
)
)
}
search.vector[2]
rownames(spectra.df)[c(index[[2]])]
mean <- matrix(ncol= ncol(range1),
nrow = nrow(range1)/3)
# mean <- as.data.frame(mean)
colnames(mean) <- colnames(range1)
rownames(mean) <- search.vector
mean[1,1]
rownames(range1)[``]
rownames(range1)[1]
colnames(range1)[1]
index[[1]]
for(j in 1:ncol(range1)){
for(i in 1:nrow(mean)){
mean[i,j] <- mean(c(range1[index[[i]][1],j],
range1[index[[i]][2],j],
range1[index[[i]][3],j]
) )
}
}
?`data.frame-class`
?`data.frame`
for(j in 1:ncol(range1)){
for(i in 1:nrow(mean)){
mean[i,j] <- mean(c(range1[index[[i]][1],j],
range1[index[[i]][2],j],
range1[index[[i]][3],j]
) )
}
}
mean <- as.data.frame(mean)
cols.means <- as.factor(search.vector)
for(i in  1:length(rownames(mean))){
plot(wavenumbers1,
mean[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(1700, 400),
ylim= c(0,0.135309),
type = 'l',
col =cols.means[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
?rubberband
?hyperspec::rubberband
?hyperSpec::rubberband
?hyperSpec::spc.rubberband
?spc
?hyperSpec
?hyperSpec::`hyperSpec-class`
str(bend)
library(hyperSpec)
# hyperSpec package functions and
#data is charged in this session
spc <- new('hyperSpec', # The class of the object
spc= mean, # the spectra matrix
wavelength = wavenumbers1) # independent varialble, whether wave number or wave length
?wl.eval
?spc.rubberband
search.vector[2]
rownames(spectra.df)[c(index[[2]])]
spc3 <- spc - bl
spc3 <- spc - bl
plot(sum,wl.reverse = TRUE)
names <- list.files(pattern = '.CSV')
spectra.list <- lapply(names, read.csv, header = F)
wavenumbers <- unlist(spectra.list[[1]][1])
spectra.list2 <- lapply(spectra.list, '[', 2)
spectra.df <- as.data.frame(t(as.data.frame(spectra.list2)))
rownames(spectra.df) <- names
colnames(spectra.df) <- wavenumbers
# gsub('.{6}$', '', names)
head(names)
names2 <- gsub('.{4}$', '', rownames(spectra.df))
head(names2)
head(names2[292:318])
names2[292:318] <- gsub('.{41}$', '', rownames(spectra.df)[292:318])
head(names2[292:318])
rownames(spectra.df) <- names2
cols <- factor(gsub('.{2}$', '', names2))
head(cols)
for(i in  1:length(rownames(spectra.df))){
plot(wavenumbers,
spectra.df[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(4000, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
colnames(spectra.df)[c(1,676)]
range1 <- spectra.df[,c(1:676)]
wavenumbers1 <- wavenumbers[c(1:676)]
for(i in  1:length(rownames(range1))){
plot(wavenumbers1,
range1[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(1700, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = 'raw spectra - ROI',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
search.vector <- unique(unlist(cols))
head(search.vector)
index <- list(106)
as.character(search.vector[1]) # the name of the first sample
which(
grepl(
paste0('(?=.*',as.character(search.vector[1]),')'),
rownames(spectra.df),
perl=T
)
)
rownames(spectra.df)[c(1, 2, 3)]
for (i in 1:106){
index[[i]] <- which(
grepl(
paste0('(?=.*',as.character(search.vector[i]),')'),
rownames(spectra.df),
perl=T
)
)
}
search.vector[2]
rownames(spectra.df)[c(index[[2]])]
mean <- matrix(ncol= ncol(range1),
nrow = nrow(range1)/3)
# mean <- as.data.frame(mean)
colnames(mean) <- colnames(range1)
rownames(mean) <- search.vector
mean[1,1]
index[[1]]
for(j in 1:ncol(range1)){
for(i in 1:nrow(mean)){
mean[i,j] <- mean(c(range1[index[[i]][1],j],
range1[index[[i]][2],j],
range1[index[[i]][3],j]
) )
}
}
mean <- as.data.frame(mean)
cols.means <- as.factor(search.vector)
for(i in  1:length(rownames(mean))){
plot(wavenumbers1,
mean[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(1700, 400),
ylim= c(0,0.135309),
type = 'l',
col =cols.means[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
library(hyperSpec)
# hyperSpec package functions and
#data is charged in this session
spc <- new('hyperSpec', # The class of the object
spc= mean, # the spectra matrix
wavelength = wavenumbers1) # independent variable, whether wave number
#or wave length
bend <- 0.1 * wl.eval(spc,
function (x) x^6+x^5+x^4+x^3+x^2,
normalize.wl = normalize01)
bl <- spc.rubberband(spc+bend, noise = 1e-4, df = 20)-bend
labels (spc, ".wavelength") <- expression(paste('Wave number (cm'^'-1',')'))
labels (spc, "spc") <- expression(paste('Absorbance (a.u.)'))
plot(spc, wl.reverse = TRUE)
plot(bl, add=TRUE, col=2,wl.reverse = TRUE)
plot(sum,wl.reverse = TRUE)
sum <- spc+bend
plot(sum,wl.reverse = TRUE)
plot(bend, add=TRUE, col=2,wl.reverse = TRUE)
spc3 <- spc - bl
spc3 <- spc3 + (min(spc3)*-1)# We add the minimum value
#which is negative to have only positive values
plot(spc3,wl.reverse = TRUE)
spc3 <- spc - bl
spc3 <- spc3 + (min(spc3)*-1)# We add the minimum value
#which is negative to have only positive values
plot(spc3,wl.reverse = TRUE)
corrected1  <- as.data.frame(spc3[1:106])
corrected <- as.data.frame(corrected1[,1])
corrected <- corrected + (min(corrected)*-1) # shifting upwards to prevent negative values
par(mfrow = c(2,2))
for(i in  1:length(rownames(spectra.df))){
plot(wavenumbers,
spectra.df[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(4000, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = 'raw spectra full range',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
for(i in  1:length(rownames(range1))){
plot(wavenumbers1,
range1[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(1700, 400),
ylim= c(0,0.2),
type = 'l',
col =cols[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = 'raw spectra - ROI',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
for(i in  1:length(rownames(mean))){
plot(wavenumbers1,
mean[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(1700, 400),
ylim= c(0,0.2),
type = 'l',
col =cols.means[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = 'averaged spectra',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
for(i in  1:length(rownames(mean))){
plot(wavenumbers1,
corrected[i,],
axes = F,
xlab = '',
ylab = '',
xlim = c(1700, 400),
ylim= c(0,0.1),
type = 'l',
col =cols.means[i]
)
par(new = T)
}
box()
axis(1)
axis(2)
title(main = 'corrected spectra',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab ='absorbance (a.u.)')
for (i in 1:length(rownames(correctedMSC))){
plot(as.numeric(colnames(correctedMSC)),
correctedMSC[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06))
par(new = T)
}
library(pls)
correctedMSC <- msc(as.matrix(corrected))
for (i in 1:length(rownames(correctedMSC))){
plot(as.numeric(colnames(correctedMSC)),
correctedMSC[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06))
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
library(pls)
correctedMSC <- msc(as.matrix(corrected))
for (i in 1:length(rownames(correctedMSC))){
plot(as.numeric(colnames(correctedMSC)),
correctedMSC[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
cols <- factor(gsub('.{2}$', '', names2))
str(cols)
names2[292:318] <- gsub('.{41}$',
'',
rownames(
spectra.df
)[292:318])
head(names2[292:317])
names2[292:318] <- gsub('.{41}$',
'',
rownames(
spectra.df
)[292:318])
head(names2[292:316])
names2[292:318] <- gsub('.{41}$',
'',
rownames(
spectra.df
)[292:318])
head(names2[292:315])
names2[292:318] <- gsub('.{41}$',
'',
rownames(
spectra.df
)[292:318])
head(names2[292:318])[1:4]
for (i in 1:106){
index[[i]] <- which(
grepl(
paste0('(?=.*',
as.character(search.vector[i])
,')'),
rownames(spectra.df),
perl=T
)
)
}
bend <- 0.1 * wl.eval(spc,
function (x)
x^6+x^5+x^4+x^3+x^2,
normalize.wl = normalize01)
bend <- 0.1 * wl.eval(spc,
function (x)
x^6+x^5+x^4+x^3+x^2,
normalize.wl =
normalize01)
library(pls)
correctedMSC <- msc(as.matrix(mean))
for (i in 1:length(rownames(correctedMSC))){
plot(as.numeric(colnames(correctedMSC)),
correctedMSC[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.06),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
for (i in 1:length(rownames(correctedMSC))){
plot(as.numeric(colnames(correctedMSC)),
correctedMSC[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.012),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
for (i in 1:length(rownames(correctedMSC))){
plot(as.numeric(colnames(correctedMSC)),
correctedMSC[i,],
xlab = '',
ylab = '',
axes = F,
type = 'l',
xlim = c(1700,400),
ylim = c(0,0.12),
col = cols[i])
par(new = T)
}
box()
axis(1)
axis(2)
title(main = '',
xlab = expression(paste('Wave number (cm'^'-1',')')),
ylab = 'Absorbance (a.u.)')
